/*
 * Copyright 2020 Aiven Oy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    gcsVerison = "1.113.15"
}

dependencies {
    implementation project(':repository-commons')

    implementation("com.google.cloud:google-cloud-storage:$gcsVerison") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.google.protobuf", module: "protobuf-java"
        exclude group: "javax.annotation", module: "javax.annotation-api"
    }

    testImplementation project(':repository-commons').sourceSets.test.output
    testImplementation project(':repository-commons').sourceSets.integrationTest.java

    integrationTestImplementation "com.google.cloud:google-cloud-storage:$gcsVerison"
    integrationTestImplementation project(':repository-commons').sourceSets.integrationTest.output
}

publishing {
    publications {
        maven(MavenPublication) {
            // Defaults, for clarity
            groupId = getGroup()
            artifactId = getName()
            version = getVersion()

            pom {
                name = "Aiven Google Cloud Storage repository plugin"
                description = "Aiven Google Cloud Storage repository plugin"
                url = "https://aiven.io"
                organization {
                    name = "Aiven Oy"
                    url = "https://aiven.io"
                }
                licenses {
                    license {
                        name = "Apache License 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                        distribution = "repo"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:aiven/aiven-elasticsearch-repositories.git"
                    developerConnection = "scm:git:git@github.com:aiven/aiven-elasticsearch-repositories.git"
                    url = "https://github.com/aiven/aiven-elasticsearch-repositories.git"
                    tag = "HEAD"
                }
            }
        }
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    dependsOn test, distTar

    useJUnitPlatform()

    minHeapSize = "1024m"
    maxHeapSize = "1024m"

    // Run always.
    outputs.upToDateWhen { false }

    //set bucket name
    if (project.hasProperty('gcsBucketName')) {
        systemProperty("integration-test.gcs.bucket.name", project.findProperty('gcsBucketName'));
    }

    // Pass the GCS credentials path to the tests.
    if (project.hasProperty('gcsCredentialsPath')) {
        systemProperty("integration-test.gcs.credentials.path", project.findProperty('gcsCredentialsPath'))
    }
    doFirst {
        assert project.findProperty('gcsBucketName') != null
        assert !(project.findProperty('gcsBucketName').allWhitespace)

        assert project.findProperty('gcsCredentialsPath') != null
        assert !(project.findProperty('gcsCredentialsPath').allWhitespace)
    }
}

