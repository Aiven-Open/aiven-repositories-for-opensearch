/*
 * Copyright 2020 Aiven Oy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    azureStorageBlobVerison = "12.8.0"
    azureStorageOkHttpVerison = "1.3.2"
}

dependencies {
    implementation project(':repository-commons')

    implementation("com.azure:azure-core-http-okhttp:$azureStorageOkHttpVerison") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jsr310"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
    }
    implementation ("com.azure:azure-storage-blob:$azureStorageBlobVerison") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.azure", module: "azure-core-http-netty"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jsr310"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
        exclude group: "io.netty", module: "netty-tcnative-boringssl"
    }
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatabind") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jsr310"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
    }
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonDatabind") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jsr310"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
    }
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonDatabind") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jsr310"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
    }

    testImplementation project(':repository-commons').sourceSets.test.output
    testImplementation project(':repository-commons').sourceSets.integrationTest.java

    integrationTestImplementation project(':repository-commons').sourceSets.integrationTest.output
}

publishing {
    publications {
        maven(MavenPublication) {
            // Defaults, for clarity
            groupId = getGroup()
            artifactId = getName()
            version = getVersion()

            pom {
                name = "Aiven Microsoft Azure storage repository plugin"
                description = "Aiven Microsoft Azure storage repository plugin"
                url = "https://aiven.io"
                organization {
                    name = "Aiven Oy"
                    url = "https://aiven.io"
                }
                licenses {
                    license {
                        name = "Apache License 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                        distribution = "repo"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:aiven/aiven-elasticsearch-repositories.git"
                    developerConnection = "scm:git:git@github.com:aiven/aiven-elasticsearch-repositories.git"
                    url = "https://github.com/aiven/aiven-elasticsearch-repositories.git"
                    tag = "HEAD"
                }
            }
        }
    }
}

task integrationTest(type: Test) {
    description = 'Runs Aiven Microsoft Azure storage plugin integration test'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    dependsOn test, distTar

    useJUnitPlatform()

    minHeapSize "1024m"
    maxHeapSize "1024m"

    // Run always.
    outputs.upToDateWhen { false }

    //set container name
    if (project.hasProperty("azureContainer")) {
        systemProperty("integration-test.azure.container.name", project.findProperty("azureContainer"))
    }
    // Pass the Azure account name to the test
    if (project.hasProperty("azureAccount")) {
        systemProperty("integration-test.azure.account", project.findProperty("azureAccount"))
    }
    // Pass the Azure account key to the test
    if (project.hasProperty("azureAccountKey")) {
        systemProperty("integration-test.azure.account.key", project.findProperty("azureAccountKey"))
    }

    doFirst {
        assert project.findProperty("azureContainer") != null
        assert project.findProperty("azureAccount") != null
        assert project.findProperty("azureAccountKey") != null

        assert !(project.findProperty("azureContainer").allWhitespace)
        assert !(project.findProperty("azureAccount").allWhitespace)
        assert !(project.findProperty("azureAccountKey").allWhitespace)
    }
}
